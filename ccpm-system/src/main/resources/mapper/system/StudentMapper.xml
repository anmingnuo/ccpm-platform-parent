<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.zut.chz.system.mapper.StudentMapper">

    <resultMap type="Student" id="StudentResult">
        <result property="id" column="id"/>
        <result property="userName" column="user_name"/>
        <result property="password" column="password"/>
        <result property="nickName" column="nick_name"/>
        <result property="gender" column="gender"/>
        <result property="clazzId" column="clazz_id"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <association property="clazz" javaType="Clazz">
            <id property="id" column="id"></id>
            <result property="clazzName" column="clazz_name"/>
        </association>
    </resultMap>

    <sql id="selectStudentVo">
        select id, user_name, password, nick_name gender, clazz_id, create_time, update_time
        from student
    </sql>

    <select id="selectStudentList" parameterType="Student" resultMap="StudentResult">
        select s.id, s.user_name, s.password, s.nick_name,s.gender, s.clazz_id, s.create_time, s.update_time ,c.clazz_name
        from student s left join clazz c on c.id=s.clazz_id
        <where>
            <if test="userName != null  and userName != ''">and s.user_name like concat('%', #{userName}, '%')</if>
            <if test="password != null  and password != ''">and s.password = #{password}</if>
            <if test="nickName != null  and nickName != ''">and s.nick_name = #{nickName}</if>
            <if test="gender != null  and gender != ''">and s.gender = #{gender}</if>
            <if test="clazzId != null ">and s.clazz_id = #{clazzId}</if>
        </where>
    </select>

    <select id="selectStudentById" parameterType="Long" resultMap="StudentResult">
        <include refid="selectStudentVo"/>
        where id = #{id}
    </select>

    <insert id="insertStudent" parameterType="Student" useGeneratedKeys="true" keyProperty="id">
        insert into student
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userName != null and userName != ''">user_name,</if>
            <if test="password != null and password != ''">password,</if>
            <if test="nickName != null and nickName != ''">nick_name,</if>
            <if test="gender != null">gender,</if>
            <if test="clazzId != null">clazz_id,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userName != null and userName != ''">#{userName},</if>
            <if test="password != null and password != ''">#{password},</if>
            <if test="nickName != null and nickName != ''">#{nickName},</if>
            <if test="gender != null">#{gender},</if>
            <if test="clazzId != null">#{clazzId},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
        </trim>
    </insert>

    <update id="updateStudent" parameterType="Student">
        update student
        <trim prefix="SET" suffixOverrides=",">
            <if test="userName != null and userName != ''">user_name = #{userName},</if>
            <if test="password != null and password != ''">password = #{password},</if>
            <if test="nickName != null and nickName != ''">nick_name = #{nickName},</if>
            <if test="gender != null">gender = #{gender},</if>
            <if test="clazzId != null">clazz_id = #{clazzId},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteStudentById" parameterType="Long">
        delete
        from student
        where id = #{id}
    </delete>

    <delete id="deleteStudentByIds" parameterType="String">
        delete from student where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>