<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.zut.chz.system.mapper.LibraryMapper">

    <resultMap type="Library" id="LibraryResult">
        <result property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="description" column="description"/>
        <result property="selectionCount" column="selection_count"/>
        <result property="views" column="views"/>
        <result property="state" column="state"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <sql id="selectLibraryVo">
        select *
        from library l
    </sql>

    <select id="selectLibraryList" parameterType="Library" resultMap="LibraryResult">
        select l.id, l.title, l.description, l.selection_count, l.views, l.state, l.create_time, l.update_time from
        library l
        left join library_category lc on lc.library_id=l.id
        left join category c on c.id=lc.category_id
        <where>
            <if test="title != null  and title != ''">and l.title = #{title}</if>
            <if test="description != null  and description != ''">and l.description like concat('%', #{description},
                '%')
            </if>
            <if test="selectionCount != null ">and l.selection_count = #{selectionCount}</if>
            <if test="state != null ">and l.state = #{state}</if>
            <if test="secondCategoryId != null ">and lc.category_id = #{secondCategoryId}</if>
        </where>
    </select>

    <select id="selectLibraryById" parameterType="Long" resultMap="LibraryResult">
        <include refid="selectLibraryVo"/>
        where id = #{id}
    </select>
    <select id="selectLibraryNameAndIdById" resultMap="LibraryResult">
        select id, title
        from library
        where id = #{libraryId}
    </select>
    <select id="getLibraryViewECharts" resultType="edu.zut.chz.system.domain.vo.LibraryViewEChartsVo">
        SELECT l.title As libraryName, views AS `view`
        FROM library l
        GROUP BY libraryName
        ORDER BY `view` DESC LIMIT 15
    </select>

    <insert id="insertLibrary" parameterType="Library" useGeneratedKeys="true" keyProperty="id">
        insert into library
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="title != null">title,</if>
            <if test="description != null">description,</if>
            <if test="selectionCount != null">selection_count,</if>
            <if test="views != null">views,</if>
            <if test="state != null">state,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="title != null">#{title},</if>
            <if test="description != null">#{description},</if>
            <if test="selectionCount != null">#{selectionCount},</if>
            <if test="views != null">#{views},</if>
            <if test="state != null">#{state},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
        </trim>
    </insert>

    <update id="updateLibrary" parameterType="Library">
        update library
        <trim prefix="SET" suffixOverrides=",">
            <if test="title != null">title = #{title},</if>
            <if test="description != null">description = #{description},</if>
            <if test="selectionCount != null">selection_count = #{selectionCount},</if>
            <if test="views != null">views = #{views},</if>
            <if test="state != null">state = #{state},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteLibraryById" parameterType="Long">
        delete
        from library
        where id = #{id}
    </delete>

    <delete id="deleteLibraryByIds" parameterType="String">
        delete from library where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>